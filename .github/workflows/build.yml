name: Build Avatars AI

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: macos-latest
    environment:
      name: build_Avatars_AI

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up API keys
      run: |
        echo "API_KEY_YANDEX_METRICA=${{ secrets.API_KEY_YANDEX_METRICA }}" >> $GITHUB_ENV
        echo "API_KEY_APPHUD=${{ secrets.API_KEY_APPHUD }}" >> $GITHUB_ENV
        echo "FANCY_BACKEND=${{ secrets.FANCY_BACKEND }}" >> $GITHUB_ENV

    - name: Set up Tuist
      run: |
        curl -Ls https://install.tuist.io | bash

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: Set up fastlane
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3

    - name: Run fastlane match
      run: |
        bundle exec fastlane match appstore
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}

    - name: Run Danger
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      run: bundle exec danger

    - name: Tuist fetch
      run: |
        tuist fetch

    - name: Tuist generate
      run: |
        tuist generate

    # - name: Run tests
    #   run: |
    #     bundle exec fastlane test

    - name: Build and archive the app
      run: |
        bundle exec fastlane build
      env:
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    - name: Upload App build artifact
      uses: actions/upload-artifact@v3
      with:
        name: Avatars
        path: "Avatars.ipa"

    - name: Upload dSYM build artifact
      uses: actions/upload-artifact@v3
      with:
        name: Avatars.app.dSYM
        path: "Avatars.app.dSYM.zip"
